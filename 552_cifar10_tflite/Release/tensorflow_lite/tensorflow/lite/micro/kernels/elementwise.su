std_abs.h:74:3:constexpr float std::abs(float)	0	static
elementwise.cc:102:47:static float tflite::ops::micro::elementwise::{anonymous}::SquareEval(TfLiteContext*, TfLiteNode*)::<lambda(float)>::_FUN(float)	0	static
elementwise.cc:38:14:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::GenericPrepare(TfLiteContext*, TfLiteNode*) [with bool (* <anonymous>)(TfLiteType) = tflite::ops::micro::elementwise::{anonymous}::IsNumericSupportedType]	40	static
elementwise.cc:38:14:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::GenericPrepare(TfLiteContext*, TfLiteNode*) [with bool (* <anonymous>)(TfLiteType) = tflite::ops::micro::elementwise::{anonymous}::IsLogicalSupportedType]	0	static
cmath:425:3:constexpr float std::sin(float)	0	static
cmath:184:3:constexpr float std::cos(float)	0	static
cmath:338:3:constexpr float std::log(float)	0	static
cmath:463:3:constexpr float std::sqrt(float)	0	static
elementwise.cc:98:47:static float tflite::ops::micro::elementwise::{anonymous}::RsqrtEval(TfLiteContext*, TfLiteNode*)::<lambda(float)>::_FUN(float)	8	static
elementwise.cc:53:21:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::EvalImpl(TfLiteContext*, TfLiteNode*, T (*)(T), TfLiteType) [with T = float]	56	static
elementwise.cc:101:14:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::SquareEval(TfLiteContext*, TfLiteNode*)	0	static
elementwise.cc:77:14:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::AbsEval(TfLiteContext*, TfLiteNode*)	0	static
elementwise.cc:81:14:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::SinEval(TfLiteContext*, TfLiteNode*)	0	static
elementwise.cc:85:14:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::CosEval(TfLiteContext*, TfLiteNode*)	0	static
elementwise.cc:97:14:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::RsqrtEval(TfLiteContext*, TfLiteNode*)	0	static
elementwise.cc:89:14:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::LogEval(TfLiteContext*, TfLiteNode*)	0	static
elementwise.cc:93:14:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::SqrtEval(TfLiteContext*, TfLiteNode*)	0	static
elementwise.cc:105:14:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::LogicalNotEval(TfLiteContext*, TfLiteNode*)	48	static
elementwise.cc:113:21:TfLiteRegistration* tflite::ops::micro::Register_ABS()	0	static
elementwise.cc:127:21:TfLiteRegistration* tflite::ops::micro::Register_SIN()	0	static
elementwise.cc:141:21:TfLiteRegistration* tflite::ops::micro::Register_COS()	0	static
elementwise.cc:155:21:TfLiteRegistration* tflite::ops::micro::Register_LOG()	0	static
elementwise.cc:169:21:TfLiteRegistration* tflite::ops::micro::Register_SQRT()	0	static
elementwise.cc:183:21:TfLiteRegistration* tflite::ops::micro::Register_RSQRT()	0	static
elementwise.cc:197:21:TfLiteRegistration* tflite::ops::micro::Register_SQUARE()	0	static
elementwise.cc:211:21:TfLiteRegistration* tflite::ops::micro::Register_LOGICAL_NOT()	0	static
